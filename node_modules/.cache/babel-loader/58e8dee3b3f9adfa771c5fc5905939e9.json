{"ast":null,"code":"import axios from 'axios'; // {//config 的参数\n//   //请求类型\n//   method: 'POST',\n//     //URL\n//   url: 'http://localhost:3001',\n//       //设置请求体\n//   data: {\n//     title: \"今天天气不错, 还挺风和日丽的\",\n//       author: \"张三\"\n//   }\n\nexport function request(config) {\n  // 1.创建axios的实例对象\n  const instance = axios.create({\n    baseURL: 'http://localhost:3000',\n    timeout: 5000\n  }); // 2.axios 的拦截器\n  // 2.1.请求拦截的作用\n\n  instance.interceptors.request.use(config => {\n    // 拦截之后必须将结果返回\n    return config;\n  }, err => {\n    console.log(err);\n  }); // 2.2.响应拦截\n\n  instance.interceptors.response.use(res => {\n    // console.log(res);\n    // 只需要将data放回即可 \n    return res.data;\n  }, err => {\n    console.log(err);\n  }); // 3.发送真正的网络请求\n\n  return instance(config); //本身(源码)就是一个 promise 所以可以用then catch\n}","map":{"version":3,"sources":["C:/Users/郭晓飞/Desktop/Edu/Education_nformation_platform/src/network/request.js"],"names":["axios","request","config","instance","create","baseURL","timeout","interceptors","use","err","console","log","response","res","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAE9B;AACA,QAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BC,IAAAA,OAAO,EAAE,uBADmB;AAE5BC,IAAAA,OAAO,EAAE;AAFmB,GAAb,CAAjB,CAH8B,CAQ9B;AACA;;AACAH,EAAAA,QAAQ,CAACI,YAAT,CAAsBN,OAAtB,CAA8BO,GAA9B,CACEN,MAAM,IAAI;AACR;AACA,WAAOA,MAAP;AACD,GAJH,EAKEO,GAAG,IAAI;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAPH,EAV8B,CAmB9B;;AACAN,EAAAA,QAAQ,CAACI,YAAT,CAAsBK,QAAtB,CAA+BJ,GAA/B,CACEK,GAAG,IAAI;AACL;AACA;AACA,WAAOA,GAAG,CAACC,IAAX;AACD,GALH,EAMEL,GAAG,IAAI;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GARH,EApB8B,CA8B9B;;AACA,SAAON,QAAQ,CAACD,MAAD,CAAf,CA/B8B,CA+BP;AAGxB","sourcesContent":["import axios from 'axios'\r\n\r\n\r\n// {//config 的参数\r\n//   //请求类型\r\n//   method: 'POST',\r\n//     //URL\r\n//   url: 'http://localhost:3001',\r\n//       //设置请求体\r\n//   data: {\r\n//     title: \"今天天气不错, 还挺风和日丽的\",\r\n//       author: \"张三\"\r\n//   }\r\nexport function request(config) {\r\n\r\n  // 1.创建axios的实例对象\r\n  const instance = axios.create({\r\n    baseURL: 'http://localhost:3000',\r\n    timeout: 5000\r\n  })\r\n\r\n  // 2.axios 的拦截器\r\n  // 2.1.请求拦截的作用\r\n  instance.interceptors.request.use(\r\n    config => {\r\n      // 拦截之后必须将结果返回\r\n      return config\r\n    },\r\n    err => {\r\n      console.log(err);\r\n    })\r\n\r\n  // 2.2.响应拦截\r\n  instance.interceptors.response.use(\r\n    res => {\r\n      // console.log(res);\r\n      // 只需要将data放回即可 \r\n      return res.data\r\n    },\r\n    err => {\r\n      console.log(err);\r\n    })\r\n\r\n  // 3.发送真正的网络请求\r\n  return instance(config)//本身(源码)就是一个 promise 所以可以用then catch\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}